name: CI/CD Pipeline con DevSecOps

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar pruebas
        run: npm test

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Escaneo de dependencias con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      - name: Build de la imagen Docker para escaneo
        run: docker build -t mi-app-devsecops .

      - name: Escaneo de imagen Docker con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image"
          image-ref: "mi-app-devsecops"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"
          severity: "HIGH,CRITICAL"

  sonar-analysis:
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Analizar código con SonarCloud
        run: |
          sonar-scanner \
            -Dsonar.projectKey=devsecops-pipeline \
            -Dsonar.organization=crisdecku \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker-build:
    needs: sonar-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Build final de la imagen Docker
        run: docker build -t mi-app-devsecops .
